{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\20228\\\\OneDrive\\\\Desktop\\\\New\\\\fishing-spots-app\\\\frontend\\\\src\\\\pages\\\\AdminPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { auth, db } from '../firebase';\nimport { doc, getDoc, collection, getDocs } from \"firebase/firestore\";\nimport { useHistory } from 'react-router-dom';\nimport AdminDashboard from '../components/AdminDashboard';\nimport { GoogleMap, Marker, useJsApiLoader } from '@react-google-maps/api';\nimport './AdminPage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: '400px'\n};\nconst defaultCenter = {\n  lat: 3.139,\n  // Kuala Lumpur\n  lng: 101.6869\n};\nfunction getDistance(lat1, lng1, lat2, lng2) {\n  // Haversine formula\n  const toRad = x => x * Math.PI / 180;\n  const R = 6371; // km\n  const dLat = toRad(lat2 - lat1);\n  const dLng = toRad(lng2 - lng1);\n  const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) * Math.sin(dLng / 2) * Math.sin(dLng / 2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  return R * c;\n}\nconst AdminPage = () => {\n  _s();\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [spots, setSpots] = useState([]);\n  const [userLocation, setUserLocation] = useState(null);\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    googleMapsApiKey: \"AIzaSyAgtx6yT4yO1KxGO1qRIDAbi2saRZYjwJ8\"\n  });\n  const history = useHistory();\n  useEffect(() => {\n    const checkAdmin = async () => {\n      const user = auth.currentUser;\n      if (!user) {\n        history.push('/login');\n        return;\n      }\n      // Only fetch the current user's document\n      const userDoc = await getDoc(doc(db, \"users\", user.uid));\n      if (userDoc.exists() && userDoc.data().role === \"admin\") {\n        setIsAdmin(true);\n      } else {\n        history.push('/home');\n      }\n      setLoading(false);\n    };\n    checkAdmin();\n  }, [history]);\n  useEffect(() => {\n    // Get user's current location\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        setUserLocation({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        });\n      }, () => setUserLocation(defaultCenter) // fallback\n      );\n    } else {\n      setUserLocation(defaultCenter);\n    }\n  }, []);\n  useEffect(() => {\n    const fetchSpots = async () => {\n      const querySnapshot = await getDocs(collection(db, \"fishingSpots\"));\n      const spotsData = querySnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setSpots(spotsData.filter(spot => spot.approved));\n    };\n    fetchSpots();\n  }, []);\n\n  // Filter spots within 20km (you can adjust this)\n  const nearbySpots = userLocation ? spots.filter(spot => getDistance(userLocation.lat, userLocation.lng, spot.location.lat, spot.location.lng) <= 20) : spots;\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 25\n  }, this);\n  if (!isAdmin) return null;\n  if (!isLoaded || !userLocation) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading Map...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 44\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AdminDashboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: containerStyle,\n      center: userLocation,\n      zoom: 12,\n      children: [/*#__PURE__*/_jsxDEV(Marker, {\n        position: userLocation,\n        label: \"You\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), nearbySpots.map(spot => /*#__PURE__*/_jsxDEV(Marker, {\n        position: {\n          lat: spot.location.lat,\n          lng: spot.location.lng\n        },\n        title: spot.title || spot.name\n      }, spot.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(AdminPage, \"qLqvRC3I4QNRbK63ZBuwpWAdFe0=\", false, function () {\n  return [useJsApiLoader, useHistory];\n});\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useEffect","useState","auth","db","doc","getDoc","collection","getDocs","useHistory","AdminDashboard","GoogleMap","Marker","useJsApiLoader","jsxDEV","_jsxDEV","Fragment","_Fragment","containerStyle","width","height","defaultCenter","lat","lng","getDistance","lat1","lng1","lat2","lng2","toRad","x","Math","PI","R","dLat","dLng","a","sin","cos","c","atan2","sqrt","AdminPage","_s","isAdmin","setIsAdmin","loading","setLoading","spots","setSpots","userLocation","setUserLocation","isLoaded","googleMapsApiKey","history","checkAdmin","user","currentUser","push","userDoc","uid","exists","data","role","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","fetchSpots","querySnapshot","spotsData","docs","map","id","filter","spot","approved","nearbySpots","location","children","fileName","_jsxFileName","lineNumber","columnNumber","mapContainerStyle","center","zoom","label","title","name","_c","$RefreshReg$"],"sources":["C:/Users/20228/OneDrive/Desktop/New/fishing-spots-app/frontend/src/pages/AdminPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { auth, db } from '../firebase';\nimport { doc, getDoc, collection, getDocs } from \"firebase/firestore\";\nimport { useHistory } from 'react-router-dom';\nimport AdminDashboard from '../components/AdminDashboard';\nimport { GoogleMap, Marker, useJsApiLoader } from '@react-google-maps/api';\nimport './AdminPage.css';\n\nconst containerStyle = {\n  width: '100%',\n  height: '400px'\n};\n\nconst defaultCenter = {\n  lat: 3.139, // Kuala Lumpur\n  lng: 101.6869\n};\n\nfunction getDistance(lat1, lng1, lat2, lng2) {\n  // Haversine formula\n  const toRad = x => x * Math.PI / 180;\n  const R = 6371; // km\n  const dLat = toRad(lat2 - lat1);\n  const dLng = toRad(lng2 - lng1);\n  const a = Math.sin(dLat/2) * Math.sin(dLat/2) +\n            Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) *\n            Math.sin(dLng/2) * Math.sin(dLng/2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n  return R * c;\n}\n\nconst AdminPage = () => {\n    const [isAdmin, setIsAdmin] = useState(false);\n    const [loading, setLoading] = useState(true);\n    const [spots, setSpots] = useState([]);\n    const [userLocation, setUserLocation] = useState(null);\n    const { isLoaded } = useJsApiLoader({\n      googleMapsApiKey: \"AIzaSyAgtx6yT4yO1KxGO1qRIDAbi2saRZYjwJ8\"\n    });\n    const history = useHistory();\n\n    useEffect(() => {\n        const checkAdmin = async () => {\n            const user = auth.currentUser;\n            if (!user) {\n                history.push('/login');\n                return;\n            }\n            // Only fetch the current user's document\n            const userDoc = await getDoc(doc(db, \"users\", user.uid));\n            if (userDoc.exists() && userDoc.data().role === \"admin\") {\n                setIsAdmin(true);\n            } else {\n                history.push('/home');\n            }\n            setLoading(false);\n        };\n        checkAdmin();\n    }, [history]);\n\n    useEffect(() => {\n      // Get user's current location\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(\n          (position) => {\n            setUserLocation({\n              lat: position.coords.latitude,\n              lng: position.coords.longitude\n            });\n          },\n          () => setUserLocation(defaultCenter) // fallback\n        );\n      } else {\n        setUserLocation(defaultCenter);\n      }\n    }, []);\n\n    useEffect(() => {\n      const fetchSpots = async () => {\n        const querySnapshot = await getDocs(collection(db, \"fishingSpots\"));\n        const spotsData = querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n        setSpots(spotsData.filter(spot => spot.approved));\n      };\n      fetchSpots();\n    }, []);\n\n    // Filter spots within 20km (you can adjust this)\n    const nearbySpots = userLocation\n      ? spots.filter(spot =>\n          getDistance(\n            userLocation.lat,\n            userLocation.lng,\n            spot.location.lat,\n            spot.location.lng\n          ) <= 20\n        )\n      : spots;\n\n    if (loading) return <div>Loading...</div>;\n    if (!isAdmin) return null;\n    if (!isLoaded || !userLocation) return <div>Loading Map...</div>;\n\n    return (\n      <>\n        <AdminDashboard />\n        <GoogleMap mapContainerStyle={containerStyle} center={userLocation} zoom={12}>\n          {/* User marker */}\n          <Marker position={userLocation} label=\"You\" />\n          {/* Nearby fishing spots */}\n          {nearbySpots.map(spot => (\n            <Marker\n              key={spot.id}\n              position={{ lat: spot.location.lat, lng: spot.location.lng }}\n              title={spot.title || spot.name}\n            />\n          ))}\n        </GoogleMap>\n      </>\n    );\n};\n\nexport default AdminPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}