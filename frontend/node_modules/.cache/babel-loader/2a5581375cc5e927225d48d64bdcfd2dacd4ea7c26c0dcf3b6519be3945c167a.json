{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\20228\\\\OneDrive\\\\Desktop\\\\New\\\\fishing-spots-app\\\\frontend\\\\src\\\\pages\\\\DirectionsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { GoogleMap, Marker, DirectionsRenderer, useJsApiLoader, Autocomplete } from '@react-google-maps/api';\nimport { useLocation } from 'react-router-dom';\nimport './DirectionsPage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DirectionsPage = () => {\n  _s();\n  const {\n    search\n  } = useLocation();\n  const params = new URLSearchParams(search);\n  const destLat = parseFloat(params.get('lat'));\n  const destLng = parseFloat(params.get('lng'));\n  const [origin, setOrigin] = useState('');\n  const [directions, setDirections] = useState(null);\n  const [autocomplete, setAutocomplete] = useState(null);\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    googleMapsApiKey: \"AIzaSyAgtx6yT4yO1KxGO1qRIDAbi2saRZYjwJ8\",\n    libraries: ['places']\n  });\n  const handleGetDirections = () => {\n    if (!origin) return;\n    const directionsService = new window.google.maps.DirectionsService();\n    directionsService.route({\n      origin,\n      destination: {\n        lat: destLat,\n        lng: destLng\n      },\n      travelMode: window.google.maps.TravelMode.DRIVING\n    }, (result, status) => {\n      if (status === window.google.maps.DirectionsStatus.OK) {\n        setDirections(result);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"directions-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Get Directions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), isLoaded && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"directions-form-row\",\n        children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n          onLoad: ac => setAutocomplete(ac),\n          onPlaceChanged: () => {\n            if (autocomplete) {\n              setOrigin(autocomplete.getPlace().formatted_address);\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"From (address, place, or 'Current Location')\",\n            value: origin,\n            onChange: e => setOrigin(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleGetDirections,\n          children: \"Show Route\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => {\n            if (navigator.geolocation) {\n              navigator.geolocation.getCurrentPosition(pos => {\n                setOrigin(`${pos.coords.latitude},${pos.coords.longitude}`);\n              });\n            }\n          },\n          style: {\n            marginLeft: 8\n          },\n          children: \"Use Current Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"directions-map-container\",\n        children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n          mapContainerStyle: {\n            width: '100%',\n            height: '100%'\n          },\n          center: {\n            lat: destLat,\n            lng: destLng\n          },\n          zoom: 13,\n          children: [/*#__PURE__*/_jsxDEV(Marker, {\n            position: {\n              lat: destLat,\n              lng: destLng\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), directions && /*#__PURE__*/_jsxDEV(DirectionsRenderer, {\n            directions: directions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), !isLoaded && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading map...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(DirectionsPage, \"L0JHpW5h0obBKMib24Bsze6y2mo=\", false, function () {\n  return [useLocation, useJsApiLoader];\n});\n_c = DirectionsPage;\nexport default DirectionsPage;\nvar _c;\n$RefreshReg$(_c, \"DirectionsPage\");","map":{"version":3,"names":["React","useState","GoogleMap","Marker","DirectionsRenderer","useJsApiLoader","Autocomplete","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","DirectionsPage","_s","search","params","URLSearchParams","destLat","parseFloat","get","destLng","origin","setOrigin","directions","setDirections","autocomplete","setAutocomplete","isLoaded","googleMapsApiKey","libraries","handleGetDirections","directionsService","window","google","maps","DirectionsService","route","destination","lat","lng","travelMode","TravelMode","DRIVING","result","status","DirectionsStatus","OK","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onLoad","ac","onPlaceChanged","getPlace","formatted_address","type","placeholder","value","onChange","e","target","onClick","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","style","marginLeft","mapContainerStyle","width","height","center","zoom","position","_c","$RefreshReg$"],"sources":["C:/Users/20228/OneDrive/Desktop/New/fishing-spots-app/frontend/src/pages/DirectionsPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { GoogleMap, Marker, DirectionsRenderer, useJsApiLoader, Autocomplete } from '@react-google-maps/api';\r\nimport { useLocation } from 'react-router-dom';\r\nimport './DirectionsPage.css';\r\n\r\nconst DirectionsPage = () => {\r\n  const { search } = useLocation();\r\n  const params = new URLSearchParams(search);\r\n  const destLat = parseFloat(params.get('lat'));\r\n  const destLng = parseFloat(params.get('lng'));\r\n\r\n  const [origin, setOrigin] = useState('');\r\n  const [directions, setDirections] = useState(null);\r\n  const [autocomplete, setAutocomplete] = useState(null);\r\n\r\n  const { isLoaded } = useJsApiLoader({\r\n    googleMapsApiKey: \"AIzaSyAgtx6yT4yO1KxGO1qRIDAbi2saRZYjwJ8\",\r\n    libraries: ['places']\r\n  });\r\n\r\n  const handleGetDirections = () => {\r\n    if (!origin) return;\r\n    const directionsService = new window.google.maps.DirectionsService();\r\n    directionsService.route(\r\n      {\r\n        origin,\r\n        destination: { lat: destLat, lng: destLng },\r\n        travelMode: window.google.maps.TravelMode.DRIVING,\r\n      },\r\n      (result, status) => {\r\n        if (status === window.google.maps.DirectionsStatus.OK) {\r\n          setDirections(result);\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"directions-page-container\">\r\n      <h2>Get Directions</h2>\r\n      {isLoaded && (\r\n        <>\r\n          <div className=\"directions-form-row\">\r\n            <Autocomplete\r\n              onLoad={ac => setAutocomplete(ac)}\r\n              onPlaceChanged={() => {\r\n                if (autocomplete) {\r\n                  setOrigin(autocomplete.getPlace().formatted_address);\r\n                }\r\n              }}\r\n            >\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"From (address, place, or 'Current Location')\"\r\n                value={origin}\r\n                onChange={e => setOrigin(e.target.value)}\r\n              />\r\n            </Autocomplete>\r\n            <button onClick={handleGetDirections}>Show Route</button>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => {\r\n                if (navigator.geolocation) {\r\n                  navigator.geolocation.getCurrentPosition(pos => {\r\n                    setOrigin(`${pos.coords.latitude},${pos.coords.longitude}`);\r\n                  });\r\n                }\r\n              }}\r\n              style={{ marginLeft: 8 }}\r\n            >\r\n              Use Current Location\r\n            </button>\r\n          </div>\r\n          <div className=\"directions-map-container\">\r\n            <GoogleMap\r\n              mapContainerStyle={{ width: '100%', height: '100%' }}\r\n              center={{ lat: destLat, lng: destLng }}\r\n              zoom={13}\r\n            >\r\n              <Marker position={{ lat: destLat, lng: destLng }} />\r\n              {directions && <DirectionsRenderer directions={directions} />}\r\n            </GoogleMap>\r\n          </div>\r\n        </>\r\n      )}\r\n      {!isLoaded && <div>Loading map...</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DirectionsPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}